{"meta":{"title":"HenryZeng","subtitle":"","description":"","author":"HenryZeng","url":"https://henryzeng-zero.github.io","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2022-06-29T06:16:21.492Z","updated":"2022-06-29T06:16:21.492Z","comments":false,"path":"/404.html","permalink":"https://henryzeng-zero.github.io/404.html","excerpt":"","text":""},{"title":"关于","date":"2022-06-29T06:16:21.492Z","updated":"2022-06-29T06:16:21.492Z","comments":false,"path":"about/index.html","permalink":"https://henryzeng-zero.github.io/about/index.html","excerpt":"","text":"有时间再写"},{"title":"分类","date":"2022-06-29T06:16:21.492Z","updated":"2022-06-29T06:16:21.492Z","comments":false,"path":"categories/index.html","permalink":"https://henryzeng-zero.github.io/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2022-06-29T06:16:21.492Z","updated":"2022-06-29T06:16:21.492Z","comments":true,"path":"links/index.html","permalink":"https://henryzeng-zero.github.io/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2022-06-29T06:16:21.492Z","updated":"2022-06-29T06:16:21.492Z","comments":false,"path":"repository/index.html","permalink":"https://henryzeng-zero.github.io/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2022-06-29T06:16:21.492Z","updated":"2022-06-29T06:16:21.492Z","comments":false,"path":"tags/index.html","permalink":"https://henryzeng-zero.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"洛谷 P1888 三角函数","slug":"洛谷-P1888-三角函数","date":"2022-03-15T12:53:19.000Z","updated":"2022-06-29T06:16:21.492Z","comments":true,"path":"2022/03/15/洛谷-P1888-三角函数/","link":"","permalink":"https://henryzeng-zero.github.io/2022/03/15/%E6%B4%9B%E8%B0%B7-P1888-%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0/","excerpt":"","text":"导入题目描述输入一组勾股数 a,b,c $(a\\neq b\\neq c)$ 用分数格式输出其较小锐角的正弦值。（要求约分） 输入格式一行，包含三个正整数，即勾股数 a,b,c（无大小顺序）。 输出格式一行，包含一个分数，即较小锐角的正弦值 输入输出样例输入 #1 13 5 4 输出 #1 13/5 说明&#x2F;提示数据保证：$a,b,c\\in \\complement _{\\mathbb{N} _+}\\left[ 1\\left. ,10^9 \\right] \\right.$ 原题见：P1888 三角函数 分析 不难看出，因为给的是勾股数，所以求较小锐角的正弦值只要找到a,b,c中的最大值和最小值即可计算。真正需要动脑筋的是后面的约分。约分的核心是找到两个数的最大公约数后将两个数分别除之即可得，那么问题就转化成了求取最大值和最小值的最大公约数。 求最大公约数的方法有二，其一是欧几里得算法又称辗转相除法，其二是更相减损术，他们的本质其实都是在缩小待求解数据的规模，把大的数据一步步变小，各有优劣，编写代码时综合两者会得到更高的运算效率。 补充芝士🧀(知识)最大公约数,英文名：Greatest Common Divisor 缩写为：gcd 如果数a能被数b整除，a就叫做b的倍数，b就叫做a的约数。 $a|b$ 表示 $a$ 能整除 $b$ （$a$ 为 $b$ 的约数）。 $gcd(a,b)$ 表示 $a,b$ 的最大公约数。 $a \\bmod b$ 表示 $a$ 除以 $b$ 取余数。 欧几里得算法运算实质:$$gcd(a,b) &#x3D; gcd(b,a\\bmod b)$$ 即$a,b\\ (a&gt;b)$的最大公约数可转化为求 $b,b&#x2F;a$ 余数的最大公约数,而运算的终止为 $gcd(m,n)\\ (n&#x3D;0)$，n为零表明完全整除，此时得出最大公约数为m。 证明有$a，b，k，r \\in N_{+}$$a$ 可以表示成 $a &#x3D; kb + r$ ， $r$ 即为 $a \\bmod b$。假设 $d$ 是 $a,b$ 的一个公约数，记作 $d|a,d|b$。而 $r &#x3D; a - kb$ ，两边同时除以 $d$ ，$r&#x2F;d&#x3D;a&#x2F;d-kb&#x2F;d$ ，因为 $k$ 为整数，所以 $kb$ 可以整除d，故而 $r&#x2F;d$ 也为整数，因此 $d|r$。因此 $d$ 也是 $b,a \\bmod b$ 的公约数。因 $a,b$ 和 $b,a \\bmod b$ 的公约数相等，则其最大公约数也相等。 证毕 样例代码1234567891011121314151617#include&lt;iostream&gt;using namespace std;// gcd(a,b) -&gt; gcd(b,a%b)int gcd(int a,int b)&#123; int r = a%b; while(r &gt; 0)&#123; a = b; b = r; r = a%b; &#125; return b;&#125;int main()&#123; cout&lt;&lt;gcd(10,5); // 测试gcd函数&#125; 更相减损术运算实质: $$gcd(a,b) &#x3D; \\begin{cases} \\text{ gcd(a,a-b) } (a&gt;b) \\\\ \\text{ gcd(b,b-a) } (a&lt;b)\\end{cases}$$ 原文： 可半者半之，不可半者，副置分母、子之数，以少减多，更相减损，求其等也。以等数约之。 译文：（如果需要对分数进行约分，那么）可以折半的话，就折半（也就是用2来约分）。如果不可以折半的话，那么就比较分母和分子的大小，用大数减去小数，重复此过程，一直到减数与差相等为止，用这个相等的数字来约分。 它原本是为约分而设计的，但它适用于任何需要求最大公约数的场合。 摘自百度百科更相减损术 证明有$a，b，k，r \\in N_{+}$$r$ 可以表示成 $r &#x3D; a - b\\ (a&gt;b)$假设 $d$ 是 $a,b$ 的一个公约数，记作 $d|a,d|b$，两边同时除以 $d$ ，$r&#x2F;d&#x3D;a&#x2F;d-b&#x2F;d$ ，易得 $r&#x2F;d$ 也为整数，因此 $d|r$因此 $d$ 也是 $b,a - b$ 的公约数。因 $a,b$ 和 $b,a \\bmod b$ 的公约数相等，则其最大公约数也相等。 证毕 样例代码12345678910111213141516#include&lt;iostream&gt;using namespace std;int gcd(int a,int b)&#123; while(a != b)&#123; if(a&gt;b)&#123; a -= b; &#125;else&#123; b -= a; &#125; &#125; return a;&#125;int main()&#123; cout&lt;&lt;gcd(100,66); // 测试 &#125; Big Surprise [两个算法的图证法] 求最大公约数的本质其实是求得一个可以被两个参量同时整除的数，基于这个事实，我们可以将这个抽象的问题具象化：有一个长a宽b的矩形区域，现在要求用某一尺寸的小正方形将其铺满。当边长为c的小正方形可以铺满矩形时，必然存在c为a，b的公约数，当c最大时，此时的c为a，b的最大公约数。","categories":[{"name":"洛谷刷题","slug":"洛谷刷题","permalink":"https://henryzeng-zero.github.io/categories/%E6%B4%9B%E8%B0%B7%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://henryzeng-zero.github.io/tags/C/"},{"name":"算法","slug":"算法","permalink":"https://henryzeng-zero.github.io/tags/%E7%AE%97%E6%B3%95/"},{"name":"证明","slug":"证明","permalink":"https://henryzeng-zero.github.io/tags/%E8%AF%81%E6%98%8E/"}]}],"categories":[{"name":"洛谷刷题","slug":"洛谷刷题","permalink":"https://henryzeng-zero.github.io/categories/%E6%B4%9B%E8%B0%B7%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://henryzeng-zero.github.io/tags/C/"},{"name":"算法","slug":"算法","permalink":"https://henryzeng-zero.github.io/tags/%E7%AE%97%E6%B3%95/"},{"name":"证明","slug":"证明","permalink":"https://henryzeng-zero.github.io/tags/%E8%AF%81%E6%98%8E/"}]}